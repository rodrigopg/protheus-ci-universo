name: CI
on:
  push:
    branches: [ "2024" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  analysis:
      name: Code Analysis/Inspeção
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: analysis
          run: |
            docker run --rm \
            -v ${{ github.workspace }}/src:/tmp \
            -v ${{ github.workspace }}/analyser/config.json:/bin/conf/config.json \
            -v ${{ github.workspace }}/analyser/output:/bin/output \
            totvsengpro/advpl-tlpp-code-analyzer:latest

  build:
      name: Build/Construção
      needs: [analysis]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Checkout private artifacts
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.GITEA_SSH }}" > ~/.ssh/id_ed25519
            chmod 600 ~/.ssh/id_ed25519
            ssh-keyscan code.engpro.totvs.com.br >> ~/.ssh/known_hosts
            git clone git@code.engpro.totvs.com.br:engpro/protheus-ci-universo-artefatos.git artifacts

        - name: List artifacts from gitea
          run: |
            ls -lah ${{ github.workspace }}/artifacts/includes/

        - name: Copy artifacts
          run: |
            cp ${{ github.workspace }}/artifacts/includes/includes.zip ${{ github.workspace }}/protheus/includes/includes.zip

        - name: Unzip includes
          run: cd ./protheus/includes && unzip includes.zip

        - name: build custom rpo
          run: |
            echo ${{ secrets.DOCKERTOKEN }} | docker login docker.totvs.io -u ${{ secrets.DOCKERUSER }} --password-stdin
            docker run --rm \
            -v ${{ github.workspace }}/src:/tmp/compile \
            -v ${{ github.workspace }}/protheus/includes:/tmp/includes \
            -v ${{ github.workspace }}/protheus/appserver.ini:/opt/totvs/appserver/appserver.ini \
            -v ${{ github.workspace }}/protheus/apo/:/opt/totvs/protheus/apo/ \
            docker.totvs.io/universo/appserver:latest \
            ./appsrvlinux -compile -env=environment -files=/tmp/compile -includes=/tmp/includes

        - name: 'Upload custom RPO'
          uses: actions/upload-artifact@v3
          with:
            name: custom-rpo
            path: ${{ github.workspace }}/protheus/apo/custom.rpo

  tir:
      name: Teste/TIR
      needs: [build]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Download custom RPO
          uses: actions/download-artifact@v3
          with:
            name: custom-rpo
            path: ${{ github.workspace }}/protheus/apo/

        - name: Checkout private artifacts
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.GITEA_SSH }}" > ~/.ssh/id_ed25519
            chmod 600 ~/.ssh/id_ed25519
            ssh-keyscan code.engpro.totvs.com.br >> ~/.ssh/known_hosts
            git clone git@code.engpro.totvs.com.br:engpro/protheus-ci-universo-artefatos.git artifacts

        - name: List artifacts from gitea
          run: |
            ls -lah ${{ github.workspace }}/artifacts/apo/
            ls -lah ${{ github.workspace }}/artifacts/systemload/

        - name: Copy artifacts to workspace
          run: |
            cp ${{ github.workspace }}/artifacts/apo/tttm120.rpo ${{ github.workspace }}/protheus/apo/tttm120.rpo
            cp ${{ github.workspace }}/artifacts/systemload/sxs.zip ${{ github.workspace }}/protheus/systemload/sxs.zip

        - name: Unzip SXs
          run: cd ./protheus/systemload && unzip sxs.zip

        - name: List artifacts files
          run: |
            ls -lah ${{ github.workspace }}/protheus/apo/
            ls -lah ${{ github.workspace }}/protheus/systemload/

        - name: Up Protheus
          run: |
            echo ${{ secrets.DOCKERTOKEN }} | docker login docker.totvs.io -u ${{ secrets.DOCKERUSER }} --password-stdin
            bash ci/scripts/up_env.sh

        - name: Test Protheus Connection
          run: curl localhost:8080

        - name: Run TIR
          run: |
            docker run --rm --network=host -e HOME=/tmp \
            -v ${{ github.workspace }}/tir:/local totvsengpro/tir \
            python3 /local/CRMA980TESTSUITE.py

        - name: Down Protheus
          run: bash ci/scripts/down_env.sh
          if: always()

  patch:
      name: CD/Patch Generation
      needs: [tir]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Download custom RPO
          uses: actions/download-artifact@v3
          with:
            name: custom-rpo
            path: ${{ github.workspace }}/protheus/apo/

        - name: Get patch files
          run: ls -lah ./protheus/apo && cd ./src && bash ../ci/scripts/list-files.sh

        - name: Build patch
          run: |
            echo ${{ secrets.DOCKERTOKEN }} | docker login docker.totvs.io -u ${{ secrets.DOCKERUSER }} --password-stdin
            docker run --rm \
            -v ${{ github.workspace }}/src:/tmp/compile \
            -v ${{ github.workspace }}/protheus/includes:/tmp/includes \
            -v ${{ github.workspace }}/protheus/appserver.ini:/opt/totvs/appserver/appserver.ini \
            -v ${{ github.workspace }}/protheus/apo/:/opt/totvs/protheus/apo/ \
            docker.totvs.io/universo/appserver:latest \
            ./appsrvlinux -compile -genpatch -env=environment -files=/tmp/compile/sources.lst -includes=/tmp/includes -outgenpatch=/tmp/compile -patchtype=ptm

        - name: 'Upload patch'
          uses: actions/upload-artifact@v3
          with:
            name: custom-ptm
            path: ${{ github.workspace }}/src/custom.ptm
